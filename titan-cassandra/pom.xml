<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.thinkaurelius.titan</groupId>
        <artifactId>titan</artifactId>
        <version>0.4.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>titan-cassandra</artifactId>
    <name>Titan-Cassandra: Distributed Graph Database</name>
    <url>http://thinkaurelius.github.com/titan/</url>
    <properties>
        <astyanax.version>1.56.37</astyanax.version>
        <jamm.version>0.2.5</jamm.version>
        <jamm.group>com.github.stephenc</jamm.group>
        <dependency.plugin.version>2.8</dependency.plugin.version>
        <cassandra.surefire.version>2.15</cassandra.surefire.version>
    </properties>
    <!-- Libraries -->
    <dependencies>
        <dependency>
            <groupId>com.thinkaurelius.titan</groupId>
            <artifactId>titan-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thinkaurelius.titan</groupId>
            <artifactId>titan-test</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.thinkaurelius.titan</groupId>
            <artifactId>titan-es</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <!--
            JNA is not required to run Cassandra, but it improves
            efficiency of certain of Cassandra's filesystem and memory
            operations.  DataStax describes JNA as "required for
            production installations":

            http://www.datastax.com/docs/1.2/install/install_jre
        -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
            <optional>true</optional>
        </dependency>
        <!-- 
            Temporary hack to work around the outdated 12.0 Guava pom.xml
            dependency in Cassandra 1.2.2.  Cassandra 1.2.2 actually
            requires Guava 13.0.1, judging from the distro tarball
            and runtime NoClassDefFoundErrors looking for the class
            com/google/common/util/concurrent/RateLimiter.
        -->
        <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-all</artifactId>
            <version>1.2.8-cdh4-SNAPSHOT</version>
            <!-- Using avro-ipc 1.5.3 caused the following when opening the graphdb:
                 java.lang.NoSuchMethodError: org.apache.avro.io.DecoderFactory.configureDirectDecoder(Z)Lorg/apache/avro/io/DecoderFactory

                 Stock avro 1.4.0 or 1.4.1 might work, but I'd like to see
                 what customizations were made in the cassandra copy of avro
                 before trying to drop it for the stock artifact...
            <exclusions>
                <exclusion>
                    <groupId>org.apache.cassandra.deps</groupId>
                    <artifactId>avro</artifactId>
                </exclusion>
            </exclusions>
            -->
        </dependency>
        <!--
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>1.4.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>netty</artifactId>
                    <groupId>org.jboss.netty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>paranamer</artifactId>
                    <groupId>com.thoughtworks.paranamer</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>paranamer-ant</artifactId>
                    <groupId>com.thoughtworks.paranamer</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>velocity</artifactId>
                    <groupId>org.apache.velocity</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        -->
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
            <version>3.2.7.Final</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.astyanax</groupId>
            <artifactId>astyanax-core</artifactId>
            <version>${astyanax.version}</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.astyanax</groupId>
            <artifactId>astyanax-thrift</artifactId>
            <version>${astyanax.version}</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.astyanax</groupId>
            <artifactId>astyanax-cassandra</artifactId>
            <version>${astyanax.version}</version>
        </dependency>
        <dependency>
             <groupId>com.netflix.astyanax</groupId>
             <artifactId>astyanax-recipes</artifactId>
             <version>${astyanax.version}</version>
        </dependency>
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
        </dependency>
    </dependencies>


    <profiles>
        <profile>
            <id>bop-test</id>
            <activation>
                <property>
                    <name>!test</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${cassandra.surefire.version}</version>
                        <executions>
                            <execution>
                                <id>bop-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <argLine>-Xms256m -Xmx756m -javaagent:${basedir}/target/jamm-${jamm.version}.jar</argLine>
                                    <includes>
                                        <include>**/InternalCassandraEmbeddedKeyColumnValueTest.java</include>
                                        <include>**/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java</include>
                                        <include>**/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java</include>
                                        <include>**/InternalCassandraEmbeddedGraphConcurrentTest.java</include>
                                        <include>**/InternalCassandraEmbeddedGraphPerformanceTest.java</include>
                                        <include>**/InternalCassandraEmbeddedGraphTest.java</include>
                                        <include>**/RexsterServerClientCassandraEmbeddedTest.java</include>
                                    </includes>
                                    <excludes>
                                        <exclude>**/External*.java</exclude>
                                        <exclude>**/*PerformanceTest.java</exclude>
                                        <exclude>**/*ConcurrentTest.java</exclude>
                                    </excludes>
                                    <parallel>classes</parallel>
                                    <threadCount>2</threadCount>
                                    <perCoreThreadCount>true</perCoreThreadCount>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>rp-test</id>
            <activation>
                <property>
                    <name>!test</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${cassandra.surefire.version}</version>
                        <executions>
                            <execution>
                                <id>rp-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <argLine>-Xms256m -Xmx756m -javaagent:${basedir}/target/jamm-${jamm.version}.jar</argLine>
                                    <excludes>
                                        <exclude>**/InternalCassandraEmbeddedKeyColumnValueTest.java</exclude>
                                        <exclude>**/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java</exclude>
                                        <exclude>**/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java</exclude>
                                        <exclude>**/InternalCassandraEmbeddedGraphConcurrentTest.java</exclude>
                                        <exclude>**/InternalCassandraEmbeddedGraphPerformanceTest.java</exclude>
                                        <exclude>**/InternalCassandraEmbeddedGraphTest.java</exclude>
                                        <exclude>**/RexsterServerClientCassandraEmbeddedTest.java</exclude>
                                        <exclude>**/External*.java</exclude>
                                        <exclude>**/*PerformanceTest.java</exclude>
                                        <exclude>**/*ConcurrentTest.java</exclude>
                                    </excludes>
                                    <parallel>classes</parallel>
                                    <threadCount>2</threadCount>
                                    <perCoreThreadCount>true</perCoreThreadCount>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>specific-test</id>
            <activation>
                <property>
                    <name>test</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${cassandra.surefire.version}</version>
                        <executions>
                            <execution>
                                <id>specific-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <argLine>-Xms256m -Xmx756m -javaagent:${basedir}/target/jamm-${jamm.version}.jar</argLine>
                                    <reuseForks>false</reuseForks>
                                    <forkCount>2C</forkCount>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>comprehensive</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.12.1</version>
                        <configuration>
                            <argLine>-Xms256m -Xmx1024m</argLine>
                            <includes>
                                <include>**/*Test.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/Internal*.java</exclude>
                                <exclude>**/*Suite.java</exclude>
                            </excludes>
                            <!-- Forking per class is required for the
                        Internal and External Cassandra tests
                        to run in the same suite.  Otherwise,
                        when an Internal runs before an External,
                        the Internal Cassandra daemon will hold
                        all its ports open and the External
                        Cassandra daemon will fail to bind them.  -->
                            <forkMode>always</forkMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <directory>${basedir}/target</directory>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${cassandra.surefire.version}</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources-127.0.0.1</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/cassandra-tmp/conf/127.0.0.1</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/config/cassandra</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>${basedir}/config/cassandra-filters/127.0.0.1.properties</filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${dependency.plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${jamm.group}</groupId>
                                    <artifactId>jamm</artifactId>
                                    <version>${jamm.version}</version>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

